#!/bin/bash

# Claude Code 段階的起動スクリプト（ログイン対応版）
# Usage: ./bin/claude-startup

set -e

# 色付きメッセージ関数
info() { echo -e "\e[34m[INFO]\e[0m $1"; }
success() { echo -e "\e[32m[SUCCESS]\e[0m $1"; }
warning() { echo -e "\e[33m[WARNING]\e[0m $1"; }
error() { echo -e "\e[31m[ERROR]\e[0m $1"; }

# ログイン状態チェック関数
check_login_status() {
    local session_name=$1
    local timeout=30
    local count=0
    
    info "セッション $session_name のログイン状態をチェック中..."
    
    while [ $count -lt $timeout ]; do
        # tmuxセッションから出力を取得
        local output=$(tmux capture-pane -t $session_name -p 2>/dev/null || echo "")
        
        if echo "$output" | grep -q "Claude Code"; then
            success "セッション $session_name: ログイン成功"
            return 0
        elif echo "$output" | grep -q -i "login\|email\|password"; then
            warning "セッション $session_name: ログインが必要です"
            return 1
        fi
        
        sleep 1
        count=$((count + 1))
    done
    
    warning "セッション $session_name: ログイン状態の確認がタイムアウトしました"
    return 2
}

# 対話的ログイン支援
assist_login() {
    local session_name=$1
    
    warning "セッション $session_name でログインが必要です"
    echo "以下の手順でログインしてください："
    echo "1. tmux attach -t $session_name"
    echo "2. メールアドレスとパスワードを入力"
    echo "3. ログイン完了後、Ctrl+B→D でデタッチ"
    
    read -p "ログインが完了したら Enter を押してください... " -r
    
    if check_login_status $session_name; then
        return 0
    else
        error "ログインが完了していないようです"
        return 1
    fi
}

info "🚀 Claude Code段階的起動を開始します..."

# 手順1: President認証
info "📋 Step 1: President認証を開始..."
tmux send-keys -t president 'claude --dangerously-skip-permissions' C-m

# President認証状態確認
sleep 5
if ! check_login_status "president"; then
    if ! assist_login "president"; then
        error "President認証に失敗しました"
        exit 1
    fi
fi

success "President認証完了"

# 手順2: Multiagent一括起動
info "🤖 Step 2: Multiagent一括起動を開始..."

for i in {0..3}; do
    local session="multiagent:0.$i"
    info "  Starting $session..."
    tmux send-keys -t $session 'claude --dangerously-skip-permissions' C-m
    
    sleep 3
    
    # ログイン状態確認
    if ! check_login_status $session; then
        warning "$session でログインが必要な可能性があります"
        echo "必要に応じて手動でログインしてください: tmux attach -t $session"
    fi
done

success "✅ Claude Code一括起動完了！"
echo ""
info "📝 セッション確認："
echo "  President: tmux attach -t president"
echo "  Boss1:     tmux attach -t multiagent:0.0"
echo "  Worker1:   tmux attach -t multiagent:0.1"
echo "  Worker2:   tmux attach -t multiagent:0.2"
echo "  Worker3:   tmux attach -t multiagent:0.3"
echo ""
info "🔧 ログインが必要なセッションがある場合は、上記コマンドで個別に接続してください"